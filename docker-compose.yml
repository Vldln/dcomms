version: '3.8'

networks:
  cenobridge:
    external:
      name: host
  caddy:
    external:
      name: host
volumes:
  bridge_storage:
  caddy_data:
    external: true
  caddy_config:
    external: true
  synapse_data:
    external: true
services:
  # ceno-client "bridge" service is below
  bridge:
    image: equalitie/ceno-client:latest
    networks:
      - cenobridge
    volumes:
      - bridge_storage:/var/opt/ouinet
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.dwebstackrole == bridge
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 512M
  # caddy acts as a reverse proxy for synapse (matrix)
  caddy:
    image: caddy:latest
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - caddy
    environment:
          DWEB_DOMAIN: "${DWEB_DOMAIN}"
    configs:
      - source: caddy-caddyfile-config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.dwebstackdomain == ${DWEB_DOMAIN}
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 512M
  # synapse is a matrix homeserver running as a service
  synapse:
    image: matrixdotorg/synapse:v1.53.0
    entrypoint:
    - sh
    - -c
    - chown -R 991:991 /data ; /start.py
    volumes:
      - synapse_data:/data
    networks:
      - caddy
    environment:
      SYNAPSE_CONFIG_DIR: "/data"
      SYNAPSE_DATA_DIR: "/data"
    depends_on:
      - caddy
    configs:
      - source: synapse-homeserver-config
        target: /data/homeserver.yaml
        uid: '991'
        gid: '991'
        mode: 0644
      - source: synapse-signingkey-config
        target: /data/matrix.${DWEB_DOMAIN}.signing.key
        uid: '991'
        gid: '991'
        mode: 0644
      - source: synapse-logconfig-config
        target: /data/matrix.${DWEB_DOMAIN}.log.config
        uid: '991'
        gid: '991'
        mode: 0644
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.dwebstackdomain == ${DWEB_DOMAIN}
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 512M
  # element is a matrix web GUI running as a service
  element:
    image: vectorim/element-web:v1.10.4
    networks:
      - caddy
    depends_on:
      - caddy
      - synapse
    configs:
      - source: element-json-config
        target: /app/config.json
      - source: element-nginx-config
        target: /etc/nginx/conf.d/default.conf
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.dwebstackdomain == ${DWEB_DOMAIN}
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 512M
configs:
  caddy-caddyfile-config:
    template_driver: golang
    file: ./conf/caddy/Caddyfile.tmpl
    external: false
  synapse-homeserver-config:
    file: ./conf/synapse/${DWEB_DOMAIN}.homeserver.yaml
    external: false
  synapse-signingkey-config:
    file: ./conf/synapse/${DWEB_DOMAIN}.signing.key
    external: false
  synapse-logconfig-config:
    file: ./conf/synapse/${DWEB_DOMAIN}.log.config
    external: false
  element-json-config:
    template_driver: golang
    file: ./conf/element/$DWEB_DOMAIN.config.json
    external: false
  element-nginx-config:
    template_driver: golang
    file: ./conf/element/nginx.conf
    external: false